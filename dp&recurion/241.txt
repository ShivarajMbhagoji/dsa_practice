241. Different Ways to Add Parentheses
Solved
Medium
Topics
Companies
Given a string expression of numbers and operators, return all possible results from computing all the 
different possible ways to group numbers and operators. You may return the answer in any order.
The test cases are generated such that the output values fit in a 32-bit integer and the number of 
different results does not exceed 104.

 

Example 1:

Input: expression = "2-1-1"
Output: [0,2]
Explanation:
((2-1)-1) = 0 
(2-(1-1)) = 2
Example 2:

Input: expression = "2*3-4*5"
Output: [-34,-14,-10,-10,10]
Explanation:
(2*(3-(4*5))) = -34 
((2*3)-(4*5)) = -14 
((2*(3-4))*5) = -10 
(2*((3-4)*5)) = -10 
(((2*3)-4)*5) = 10




class Solution {
public:
    map<string, vector<int>> mp;
    vector<int> find(string s) {
        if (mp.find(s) != mp.end())
            return mp[s];
        vector<int> res;

        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '+' || s[i] == '-' || s[i] == '*') {
                auto l = find(s.substr(0, i));
                auto r = find(s.substr(i + 1));

                for (auto a : l) {
                    for (auto b : r) {
                        if (s[i] == '+')
                            res.push_back(a + b);
                        else if (s[i] == '-')
                            res.push_back(a - b);
                        else if (s[i] == '*')
                            res.push_back(a * b);
                    }
                }
            }
        }

        if (res.empty())
            res.push_back(stoi(s));

        return mp[s] = res;
    }
    vector<int> diffWaysToCompute(string expression) {
        return find(expression);
    }
};